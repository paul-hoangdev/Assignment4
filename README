School Database Application

This application provides a simple interface for managing student records in a PostgreSQL database. It allows you to perform CRUD (Create, Read, Update, Delete) operations on student data.

Setup Instructions


Database Setup

Create Database:

Open the PostgreSQL command line tool (psql) and run:
CREATE DATABASE school;

Connect to the created database:
\c school_db
Execute the following command to create the students table:
CREATE TABLE students (
    student_id SERIAL PRIMARY KEY,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    email TEXT NOT NULL UNIQUE,
    enrollment_date DATE
);

Populate Data:
Insert initial records into the students table:
INSERT INTO students (first_name, last_name, email, enrollment_date) VALUES
('John', 'Doe', 'john.doe@example.com', '2023-09-01'),
('Jane', 'Smith', 'jane.smith@example.com', '2023-09-01'),
('Jim', 'Beam', 'jim.beam@example.com', '2023-09-02');

Application Setup

Environment Setup:

Ensure Python is installed on your system. Python Downloads
Install psycopg2:
pip install psycopg2
Configuration:
Update the database connection parameters in school_app.py with your PostgreSQL credentials.

Compile and Run the Application
Run the application using Python:
python main.py

Application Functions
getAllStudents(): Retrieves all student records from the students table and displays them.
addStudent(first_name, last_name, email, enrollment_date): Inserts a new student record into the students table. Parameters are the student's first name, last name, email, and enrollment date.
updateStudentEmail(student_id, new_email): Updates the email address for a student. Requires the student's ID and the new email address.
deleteStudent(student_id): Deletes the record of a student with the specified student ID.

Youtube Link: https://youtu.be/g4nuD0THFCA